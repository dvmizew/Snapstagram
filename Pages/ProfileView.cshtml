@page "/Profile/{username?}"
@model ProfileViewModel
@{
    ViewData["Title"] = Model.ProfileUser?.DisplayName ?? "Profile";
}

<div class="container mt-4">
    <div class="row">
        <!-- Profile Header -->
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col-auto">
                            <div class="profile-image-container position-relative">
                                <img src="@(Model.ProfileUser?.ProfileImageUrl ?? "/images/default-avatar.svg")" 
                                     alt="@Model.ProfileUser?.DisplayName" 
                                     class="rounded-circle profile-image"
                                     style="width: 120px; height: 120px; object-fit: cover; border: 3px solid #e9ecef;">
                                @if (Model.IsOwnProfile)
                                {
                                    <button type="button" class="btn btn-sm btn-primary position-absolute" 
                                            style="bottom: 0; right: 0; border-radius: 50%; width: 30px; height: 30px;"
                                            title="Change profile image"
                                            data-bs-toggle="modal" data-bs-target="#profileImageModal">
                                        <i class="fas fa-camera" style="font-size: 12px;"></i>
                                    </button>
                                }
                            </div>
                        </div>
                        <div class="col">
                            <div class="d-flex align-items-center mb-3">
                                <h2 class="mb-0 me-3">@@(Model.ProfileUser?.UserName)</h2>
                                @if (Model.IsOwnProfile)
                                {
                                    <button type="button" class="btn btn-outline-primary btn-sm me-2" data-bs-toggle="collapse" data-bs-target="#editProfileSection">
                                        <i class="fas fa-edit me-1"></i>Edit Profile
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#profileImageModal">
                                        <i class="fas fa-camera me-1"></i>Change Photo
                                    </button>
                                }
                                else
                                {
                                    <form method="post" asp-page-handler="ToggleFollow" class="d-inline">
                                        <input type="hidden" name="targetUserId" value="@Model.ProfileUser?.Id" />
                                        <button type="submit" class="btn @(Model.IsFollowing ? "btn-outline-secondary" : "btn-primary") btn-sm">
                                            <i class="fas @(Model.IsFollowing ? "fa-user-minus" : "fa-user-plus") me-1"></i>
                                            @(Model.IsFollowing ? "Unfollow" : "Follow")
                                        </button>
                                    </form>
                                    <a href="#" class="btn btn-outline-primary btn-sm ms-2">
                                        <i class="fas fa-envelope me-1"></i>Message
                                    </a>
                                }
                            </div>
                            
                            <div class="d-flex mb-3">
                                <div class="me-4">
                                    <strong>@Model.PostsCount</strong> posts
                                </div>
                                <div class="me-4">
                                    <a href="#" class="text-decoration-none text-dark" data-bs-toggle="modal" data-bs-target="#followersModal">
                                        <strong>@Model.FollowersCount</strong> followers
                                    </a>
                                </div>
                                <div>
                                    <a href="#" class="text-decoration-none text-dark" data-bs-toggle="modal" data-bs-target="#followingModal">
                                        <strong>@Model.FollowingCount</strong> following
                                    </a>
                                </div>
                            </div>
                            
                            <div>
                                <h6 class="mb-1">@Model.ProfileUser?.DisplayName</h6>
                                @if (!string.IsNullOrEmpty(Model.ProfileUser?.Bio))
                                {
                                    <p class="text-muted mb-0">@Model.ProfileUser.Bio</p>
                                }
                                @if (Model.ProfileUser?.IsPrivate == true)
                                {
                                    <span class="badge bg-secondary mt-2">
                                        <i class="fas fa-lock me-1"></i>Private Account
                                    </span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Profile Section (Collapsible) -->
    @if (Model.IsOwnProfile)
    {
        <div class="row mt-4">
            <div class="col-12">
                <div class="collapse" id="editProfileSection">
                    <div class="card">
                        <div class="card-header">
                            <h5><i class="fas fa-user me-2"></i>Edit Profile</h5>
                        </div>
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(Model.Message))
                            {
                                <div class="alert @(Model.IsSuccess ? "alert-success" : "alert-danger")">
                                    @Model.Message
                                </div>
                            }

                            <form method="post" asp-page-handler="UpdateProfile">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label asp-for="Username" class="form-label"></label>
                                        <input asp-for="Username" class="form-control" readonly />
                                        <small class="form-text text-muted">Username cannot be changed.</small>
                                    </div>
                                    <div class="col-md-6">
                                        <label asp-for="Email" class="form-label"></label>
                                        <input asp-for="Email" class="form-control" readonly />
                                        <small class="form-text text-muted">Email cannot be changed.</small>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="DisplayName" class="form-label"></label>
                                    <input asp-for="DisplayName" class="form-control" />
                                    <span asp-validation-for="DisplayName" class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Bio" class="form-label"></label>
                                    <textarea asp-for="Bio" class="form-control" rows="3" placeholder="Tell us about yourself..." maxlength="500"></textarea>
                                    <span asp-validation-for="Bio" class="text-danger"></span>
                                    <small class="form-text text-muted">
                                        <span id="bioCount">@(Model.Bio?.Length ?? 0)</span>/500 characters
                                    </small>
                                </div>

                                <div class="mb-3">
                                    <div class="form-check">
                                        <input asp-for="IsPrivate" class="form-check-input" type="checkbox" />
                                        <label asp-for="IsPrivate" class="form-check-label">
                                            Private Account
                                        </label>
                                    </div>
                                    <small class="form-text text-muted">
                                        When your account is private, only people you approve can see your photos and videos.
                                    </small>
                                </div>

                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save me-2"></i>Save Changes
                                    </button>
                                </div>
                            </form>

                            <!-- Additional Settings Accordion -->
                            <div class="accordion mt-4" id="settingsAccordion">
                                <!-- Change Password -->
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#changePasswordSection">
                                            <i class="fas fa-lock me-2"></i>Change Password
                                        </button>
                                    </h2>
                                    <div id="changePasswordSection" class="accordion-collapse collapse" data-bs-parent="#settingsAccordion">
                                        <div class="accordion-body">
                                            <form method="post" asp-page-handler="ChangePassword">
                                                <div class="mb-3">
                                                    <label asp-for="CurrentPassword" class="form-label"></label>
                                                    <input asp-for="CurrentPassword" class="form-control" type="password" />
                                                    <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                                                </div>

                                                <div class="mb-3">
                                                    <label asp-for="NewPassword" class="form-label"></label>
                                                    <input asp-for="NewPassword" class="form-control" type="password" />
                                                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                                                </div>

                                                <div class="mb-3">
                                                    <label asp-for="ConfirmNewPassword" class="form-label"></label>
                                                    <input asp-for="ConfirmNewPassword" class="form-control" type="password" />
                                                    <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                                                </div>

                                                <div class="d-grid">
                                                    <button type="submit" class="btn btn-warning">
                                                        <i class="fas fa-key me-2"></i>Change Password
                                                    </button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>

                                <!-- Data Export -->
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#dataExportSection">
                                            <i class="fas fa-download me-2"></i>Download Data
                                        </button>
                                    </h2>
                                    <div id="dataExportSection" class="accordion-collapse collapse" data-bs-parent="#settingsAccordion">
                                        <div class="accordion-body">
                                            <p class="text-muted mb-3">
                                                Download a copy of all your data including profile information, posts, followers, and following lists.
                                            </p>
                                            <form method="post" asp-page-handler="DownloadData">
                                                <div class="d-grid">
                                                    <button type="submit" class="btn btn-info">
                                                        <i class="fas fa-download me-2"></i>Download My Data
                                                    </button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>

                                <!-- Delete Account -->
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#deleteAccountSection">
                                            <i class="fas fa-trash me-2"></i>Delete Account
                                        </button>
                                    </h2>
                                    <div id="deleteAccountSection" class="accordion-collapse collapse" data-bs-parent="#settingsAccordion">
                                        <div class="accordion-body">
                                            <div class="alert alert-danger">
                                                <h6><i class="fas fa-exclamation-triangle me-2"></i>Warning</h6>
                                                <p class="mb-0">This action cannot be undone. All your posts, followers, and account data will be permanently deleted.</p>
                                            </div>
                                            <form method="post" asp-page-handler="DeleteAccount" onsubmit="return confirmAccountDeletion()">
                                                <div class="mb-3">
                                                    <label class="form-label">Confirm your password to delete account:</label>
                                                    <input type="password" name="confirmPassword" class="form-control" required />
                                                </div>
                                                <div class="d-grid">
                                                    <button type="submit" class="btn btn-danger">
                                                        <i class="fas fa-trash me-2"></i>Delete My Account
                                                    </button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="row mt-4">
        <div class="col-12">
            @if (Model.CanViewPosts)
            {
                @if (Model.Posts.Any())
                {
                    <div class="row g-1">
                        @foreach (var post in Model.Posts)
                        {
                            <div class="col-4">
                                <div class="position-relative">
                                    <img src="@post.ImageUrl" 
                                         alt="Post" 
                                         class="img-fluid w-100 post-thumbnail"
                                         style="aspect-ratio: 1; object-fit: cover; cursor: pointer;"
                                         onclick="openPostModal(@post.Id)"
                                         data-post-id="@post.Id">
                                    
                                    @if (!string.IsNullOrEmpty(post.VideoUrl))
                                    {
                                        <div class="position-absolute top-0 end-0 p-2">
                                            <i class="fas fa-play-circle text-white" style="font-size: 1.5rem; text-shadow: 0 0 5px rgba(0,0,0,0.7);"></i>
                                        </div>
                                    }
                                    
                                    <div class="position-absolute bottom-0 start-0 end-0 p-2 d-flex justify-content-between text-white" style="background: linear-gradient(transparent, rgba(0,0,0,0.7));">
                                        <span><i class="fas fa-heart me-1"></i>@post.LikesCount</span>
                                        <span><i class="fas fa-comment me-1"></i>@post.CommentsCount</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    
                    @if (Model.HasMorePosts)
                    {
                        <div class="text-center mt-4">
                            <button class="btn btn-outline-primary" id="loadMorePosts">
                                <i class="fas fa-plus me-2"></i>Load More Posts
                            </button>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-camera" style="font-size: 4rem; color: #dee2e6;"></i>
                        <h4 class="mt-3 text-muted">No Posts Yet</h4>
                        @if (Model.IsOwnProfile)
                        {
                            <p class="text-muted">Share your first photo or video!</p>
                            <a asp-page="/Create" class="btn btn-primary">
                                <i class="fas fa-plus me-2"></i>Create Post
                            </a>
                        }
                        else
                        {
                            <p class="text-muted">This user hasn't shared any posts yet.</p>
                        }
                    </div>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-lock" style="font-size: 4rem; color: #dee2e6;"></i>
                    <h4 class="mt-3 text-muted">This Account is Private</h4>
                    <p class="text-muted">Follow @@(Model.ProfileUser?.UserName) to see their photos and videos.</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Profile Image Upload Modal -->
@if (Model.IsOwnProfile)
{
    <div class="modal fade" id="profileImageModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Change Profile Photo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-page-handler="UploadProfileImage" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label class="form-label">Choose a new profile picture:</label>
                            <input type="file" name="profileImage" class="form-control" accept="image/jpeg,image/jpg,image/png,image/gif" required />
                            <small class="form-text text-muted">
                                Supported formats: JPEG, PNG, GIF. Maximum size: 5MB.
                            </small>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-upload me-2"></i>Upload Photo
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<!-- Followers Modal -->
<div class="modal fade" id="followersModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Followers</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" style="max-height: 400px; overflow-y: auto;">
                <div id="followersList"></div>
            </div>
        </div>
    </div>
</div>

<!-- Following Modal -->
<div class="modal fade" id="followingModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Following</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" style="max-height: 400px; overflow-y: auto;">
                <div id="followingList"></div>
            </div>
        </div>
    </div>
</div>

<!-- Profile Image Upload Modal -->
@if (Model.IsOwnProfile)
{
    <div class="modal fade" id="profileImageModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Change Profile Photo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-page-handler="UploadProfileImage" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label class="form-label">Choose a new profile picture:</label>
                            <input type="file" name="profileImage" class="form-control" accept="image/jpeg,image/jpg,image/png,image/gif" required />
                            <small class="form-text text-muted">
                                Supported formats: JPEG, PNG, GIF. Maximum size: 5MB.
                            </small>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-upload me-2"></i>Upload
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<!-- Post Detail Modal -->
<div class="modal fade" id="postModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-body p-0">
                <div class="row g-0">
                    <div class="col-md-8">
                        <div id="postMediaContainer" class="d-flex align-items-center justify-content-center bg-black" style="height: 600px;">
                            <!-- Post media will be loaded here -->
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="d-flex flex-column h-100">
                            <!-- Post Header -->
                            <div class="border-bottom p-3">
                                <div class="d-flex align-items-center">
                                    <img id="postUserAvatar" src="" alt="" class="rounded-circle me-3" style="width: 40px; height: 40px; object-fit: cover;">
                                    <div class="flex-grow-1">
                                        <h6 id="postUserName" class="mb-0 fw-semibold"></h6>
                                        <small id="postTime" class="text-muted"></small>
                                    </div>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                            </div>
                            
                            <!-- Post Caption -->
                            <div class="p-3 border-bottom">
                                <div class="d-flex align-items-start">
                                    <img id="postCaptionAvatar" src="" alt="" class="rounded-circle me-3" style="width: 32px; height: 32px; object-fit: cover;">
                                    <div>
                                        <span id="postCaptionUser" class="fw-semibold"></span>
                                        <span id="postCaption" class="ms-2"></span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Comments -->
                            <div class="flex-grow-1 overflow-auto p-3" id="postComments" style="max-height: 400px;">
                                <!-- Comments will be loaded here -->
                            </div>
                            
                            <!-- Post Actions -->
                            <div class="border-top p-3">
                                <div class="d-flex justify-content-between mb-3">
                                    <div class="d-flex gap-3">
                                        <button id="postLikeBtn" class="btn p-0 border-0 bg-transparent fs-5" onclick="togglePostLike()">
                                            <i class="far fa-heart"></i>
                                        </button>
                                        <button class="btn p-0 border-0 bg-transparent fs-5" onclick="focusPostComment()">
                                            <i class="far fa-comment"></i>
                                        </button>
                                        <button class="btn p-0 border-0 bg-transparent fs-5" onclick="sharePostModal()">
                                            <i class="far fa-paper-plane"></i>
                                        </button>
                                    </div>
                                    <button id="postBookmarkBtn" class="btn p-0 border-0 bg-transparent fs-5" onclick="togglePostBookmark()">
                                        <i class="far fa-bookmark"></i>
                                    </button>
                                </div>
                                
                                <div class="mb-2">
                                    <span id="postLikesCount" class="fw-semibold">0</span> likes
                                </div>
                                
                                <!-- Add Comment -->
                                <div class="d-flex">
                                    <input type="text" id="postCommentInput" class="form-control border-0 bg-transparent" placeholder="Add a comment..." style="outline: none; box-shadow: none;">
                                    <button id="postCommentSubmit" class="btn btn-link text-primary p-0 ms-2" onclick="addPostComment()" disabled>Post</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentPostId = null;
        
        // Bio character counter
        $('#Bio').on('input', function() {
            const count = $(this).val().length;
            $('#bioCount').text(count);
        });

        // Account deletion confirmation
        function confirmAccountDeletion() {
            return confirm('Are you absolutely sure you want to delete your account? This action cannot be undone and all your data will be permanently lost.');
        }
        
        // Load followers
        $('#followersModal').on('show.bs.modal', function () {
            loadUserList('followers', '@Model.ProfileUser?.Id', '#followersList');
        });

        // Load following
        $('#followingModal').on('show.bs.modal', function () {
            loadUserList('following', '@Model.ProfileUser?.Id', '#followingList');
        });

        function loadUserList(type, userId, container) {
            fetch(`/api/profile/${type}/${userId}`)
                .then(response => response.json())
                .then(users => {
                    let html = '';
                    users.forEach(user => {
                        html += `
                            <div class="d-flex align-items-center mb-3">
                                <img src="${user.profileImageUrl || '/images/default-avatar.svg'}" 
                                     class="rounded-circle me-3" 
                                     style="width: 40px; height: 40px; object-fit: cover;">
                                <div class="flex-grow-1">
                                    <a href="/Profile/${user.userName}" class="text-decoration-none">
                                        <div class="fw-bold">${user.userName}</div>
                                        <div class="text-muted small">${user.displayName}</div>
                                    </a>
                                </div>
                            </div>
                        `;
                    });
                    $(container).html(html);
                })
                .catch(error => {
                    $(container).html('<p class="text-muted">Failed to load users.</p>');
                });
        }

        // Load more posts
        let currentPage = 1;
        $('#loadMorePosts').click(function() {
            const button = $(this);
            button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-2"></i>Loading...');
            
            fetch(`/api/profile/posts/@Model.ProfileUser?.Id?page=${currentPage}`)
                .then(response => response.json())
                .then(posts => {
                    if (posts.length > 0) {
                        let html = '';
                        posts.forEach(post => {
                            html += `
                                <div class="col-4">
                                    <div class="position-relative">
                                        <img src="${post.imageUrl}" 
                                             alt="Post" 
                                             class="img-fluid w-100 post-thumbnail"
                                             style="aspect-ratio: 1; object-fit: cover; cursor: pointer;"
                                             onclick="openPostModal(${post.id})">
                                        
                                        ${post.videoUrl ? '<div class="position-absolute top-0 end-0 p-2"><i class="fas fa-play-circle text-white" style="font-size: 1.5rem; text-shadow: 0 0 5px rgba(0,0,0,0.7);"></i></div>' : ''}
                                        
                                        <div class="position-absolute bottom-0 start-0 end-0 p-2 d-flex justify-content-between text-white" style="background: linear-gradient(transparent, rgba(0,0,0,0.7));">
                                            <span><i class="fas fa-heart me-1"></i>${post.likesCount}</span>
                                            <span><i class="fas fa-comment me-1"></i>${post.commentsCount}</span>
                                        </div>
                                    </div>
                                </div>
                            `;
                        });
                        $('.row.g-1').append(html);
                        currentPage++;
                        
                        if (posts.length < 12) {
                            button.hide();
                        } else {
                            button.prop('disabled', false).html('<i class="fas fa-plus me-2"></i>Load More Posts');
                        }
                    } else {
                        button.hide();
                    }
                })
                .catch(error => {
                    button.prop('disabled', false).html('<i class="fas fa-plus me-2"></i>Load More Posts');
                });
        });

        // Post Modal Functions
        async function openPostModal(postId) {
            currentPostId = postId;
            
            try {
                const response = await fetch(`/api/posts/${postId}`);
                if (response.ok) {
                    const post = await response.json();
                    loadPostIntoModal(post);
                    $('#postModal').modal('show');
                } else {
                    console.error('Failed to load post details');
                }
            } catch (error) {
                console.error('Error loading post:', error);
            }
        }

        function loadPostIntoModal(post) {
            // Load media
            const mediaContainer = document.getElementById('postMediaContainer');
            if (post.videoUrl) {
                mediaContainer.innerHTML = `
                    <video controls class="w-100 h-100" style="object-fit: contain;">
                        <source src="${post.videoUrl}" type="video/mp4">
                        Your browser does not support the video tag.
                    </video>
                `;
            } else {
                mediaContainer.innerHTML = `
                    <img src="${post.imageUrl}" alt="Post" class="w-100 h-100" style="object-fit: contain;">
                `;
            }
            
            // Load user info
            document.getElementById('postUserAvatar').src = post.user.profileImageUrl || '/images/default-avatar.svg';
            document.getElementById('postUserName').textContent = post.user.displayName;
            document.getElementById('postTime').textContent = getRelativeTime(new Date(post.createdAt));
            
            // Load caption
            document.getElementById('postCaptionAvatar').src = post.user.profileImageUrl || '/images/default-avatar.svg';
            document.getElementById('postCaptionUser').textContent = post.user.displayName;
            document.getElementById('postCaption').textContent = post.caption || '';
            
            // Load stats
            document.getElementById('postLikesCount').textContent = post.likesCount;
            
            // Update like button
            const likeBtn = document.getElementById('postLikeBtn');
            likeBtn.className = post.isLiked ? 'btn p-0 border-0 bg-transparent fs-5 text-danger' : 'btn p-0 border-0 bg-transparent fs-5';
            likeBtn.querySelector('i').className = post.isLiked ? 'fas fa-heart' : 'far fa-heart';
            
            // Load comments
            loadPostComments(post.id);
        }

        async function loadPostComments(postId) {
            try {
                const response = await fetch(`/api/posts/${postId}/comments`);
                if (response.ok) {
                    const comments = await response.json();
                    const commentsContainer = document.getElementById('postComments');
                    
                    let html = '';
                    comments.forEach(comment => {
                        html += `
                            <div class="d-flex mb-3">
                                <img src="${comment.user.profileImageUrl || '/images/default-avatar.svg'}" 
                                     alt="${comment.user.displayName}" 
                                     class="rounded-circle me-3" 
                                     style="width: 32px; height: 32px; object-fit: cover;">
                                <div>
                                    <div>
                                        <span class="fw-semibold">${comment.user.displayName}</span>
                                        <span class="ms-2">${comment.text}</span>
                                    </div>
                                    <small class="text-muted">${getRelativeTime(new Date(comment.createdAt))}</small>
                                </div>
                            </div>
                        `;
                    });
                    
                    commentsContainer.innerHTML = html;
                }
            } catch (error) {
                console.error('Error loading comments:', error);
            }
        }

        async function togglePostLike() {
            if (!currentPostId) return;
            
            try {
                const response = await fetch(`/api/posts/${currentPostId}/like`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                });
                
                if (response.ok) {
                    const result = await response.json();
                    
                    // Update like button
                    const likeBtn = document.getElementById('postLikeBtn');
                    likeBtn.className = result.liked ? 'btn p-0 border-0 bg-transparent fs-5 text-danger' : 'btn p-0 border-0 bg-transparent fs-5';
                    likeBtn.querySelector('i').className = result.liked ? 'fas fa-heart' : 'far fa-heart';
                    
                    // Update likes count
                    document.getElementById('postLikesCount').textContent = result.likesCount;
                }
            } catch (error) {
                console.error('Error toggling like:', error);
            }
        }

        async function addPostComment() {
            if (!currentPostId) return;
            
            const input = document.getElementById('postCommentInput');
            const text = input.value.trim();
            
            if (!text) return;
            
            try {
                const response = await fetch(`/api/posts/${currentPostId}/comments`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ text })
                });
                
                if (response.ok) {
                    input.value = '';
                    document.getElementById('postCommentSubmit').disabled = true;
                    loadPostComments(currentPostId);
                }
            } catch (error) {
                console.error('Error adding comment:', error);
            }
        }

        function focusPostComment() {
            document.getElementById('postCommentInput').focus();
        }

        function sharePostModal() {
            if (!currentPostId) return;
            
            if (navigator.share) {
                navigator.share({
                    title: 'Check out this post on Snapstagram',
                    url: `${window.location.origin}/posts/${currentPostId}`
                });
            } else {
                const url = `${window.location.origin}/posts/${currentPostId}`;
                navigator.clipboard.writeText(url).then(() => {
                    alert('Link copied to clipboard!');
                });
            }
        }

        async function togglePostBookmark() {
            if (!currentPostId) return;
            
            try {
                const response = await fetch(`/api/posts/${currentPostId}/bookmark`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                });
                
                if (response.ok) {
                    const result = await response.json();
                    const bookmarkBtn = document.getElementById('postBookmarkBtn');
                    bookmarkBtn.querySelector('i').className = result.bookmarked ? 'fas fa-bookmark' : 'far fa-bookmark';
                }
            } catch (error) {
                console.error('Error toggling bookmark:', error);
            }
        }

        function getRelativeTime(date) {
            const now = new Date();
            const diffTime = Math.abs(now - date);
            const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));
            const diffHours = Math.floor(diffTime / (1000 * 60 * 60));
            const diffMinutes = Math.floor(diffTime / (1000 * 60));
            
            if (diffDays > 0) return `${diffDays}d`;
            if (diffHours > 0) return `${diffHours}h`;
            if (diffMinutes > 0) return `${diffMinutes}m`;
            return 'now';
        }

        // Enable/disable comment submit button
        document.getElementById('postCommentInput').addEventListener('input', function() {
            document.getElementById('postCommentSubmit').disabled = !this.value.trim();
        });

        // Handle clicking on existing posts
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('post-thumbnail')) {
                const postId = e.target.dataset.postId;
                if (postId) {
                    openPostModal(parseInt(postId));
                }
            }
        });
    </script>
}

<style>
    .post-thumbnail:hover {
        transform: scale(1.02);
        transition: transform 0.2s ease;
    }
</style>
