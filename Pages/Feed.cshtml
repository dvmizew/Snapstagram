@page
@model Snapstagram.Pages.FeedModel
@{
    ViewData["Title"] = "Feed";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/account.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />
    <style>
        /* Force dark theme for Feed page */
        body {
            background-color: #121212 !important;
            color: white !important;
        }
        
        /* Force white text throughout the Feed page */
        .container,
        .card-body,
        .post-card,
        .post-card *,
        p, h1, h2, h3, h4, h5, h6,
        .text-muted,
        .small {
            color: white !important;
        }
        
        /* Ensure proper contrast for cards on dark background */
        .card,
        .post-card {
            background-color: rgba(255, 255, 255, 0.1) !important;
            border-color: rgba(255, 255, 255, 0.2) !important;
        }
        
        /* Override any dark text */
        .text-dark {
            color: white !important;
        }
        
        /* Ensure buttons maintain proper styling */
        .btn-primary {
            background-color: var(--accent-color);
            border-color: var(--accent-color);
            color: white !important;
        }
        
        .btn-outline-primary {
            border-color: var(--accent-color);
            color: var(--accent-color) !important;
        }
        
        .btn-outline-primary:hover {
            background-color: var(--accent-color);
            color: white !important;
        }
        
        /* Secondary text should be light gray */
        .text-secondary {
            color: #B0B0B0 !important;
        }
        
        /* Make sure icons are visible */
        .fas, .far {
            color: inherit;
        }
        
        /* Make text muted lighter */
        .text-muted {
            color: #B0B0B0 !important;
        }
    </style>
}

@section Scripts {
    <script>
        window.postsData = @Html.Raw(Json.Serialize(Model.Posts.Select(p => new {
            id = p.Id,
            caption = p.Caption,
            imageUrl = p.ImageUrl,
            createdAt = p.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt"),
            user = new {
                id = p.User?.Id,
                firstName = p.User?.FirstName,
                lastName = p.User?.LastName,
                profilePictureUrl = p.User?.ProfilePictureUrl
            },
            comments = p.Comments.Select(c => new {
                id = c.Id,
                content = c.Content,
                createdAt = c.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt"),
                user = new {
                    firstName = c.User?.FirstName,
                    lastName = c.User?.LastName,
                    profilePictureUrl = c.User?.ProfilePictureUrl
                },
                canDelete = c.UserId == Model.CurrentUser.Id || p.UserId == Model.CurrentUser.Id,
                likeCount = c.CommentLikes.Count,
                isLikedByCurrentUser = c.CommentLikes.Any(cl => cl.UserId == Model.CurrentUser.Id),
                replies = c.CommentReplies.Select(cr => new {
                    id = cr.Id,
                    content = cr.Content,
                    createdAt = cr.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt"),
                    user = new {
                        firstName = cr.User?.FirstName,
                        lastName = cr.User?.LastName,
                        profilePictureUrl = cr.User?.ProfilePictureUrl
                    },
                    canDelete = cr.UserId == Model.CurrentUser.Id || c.UserId == Model.CurrentUser.Id || p.UserId == Model.CurrentUser.Id
                }).ToList()
            }).ToList(),
            likeCount = p.Likes.Count,
            isLikedByCurrentUser = p.Likes.Any(l => l.UserId == Model.CurrentUser.Id),
            likes = p.Likes.Select(l => new {
                user = new {
                    firstName = l.User?.FirstName,
                    lastName = l.User?.LastName,
                    profilePictureUrl = l.User?.ProfilePictureUrl
                },
                createdAt = l.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")
            }).ToList(),
            canEdit = p.UserId == Model.CurrentUser.Id,
            canDelete = p.UserId == Model.CurrentUser.Id
        })));

        window.currentUserData = {
            id: '@Model.CurrentUser.Id',
            firstName: '@Model.CurrentUser.FirstName',
            lastName: '@Model.CurrentUser.LastName',
            profilePictureUrl: '@Model.CurrentUser.ProfilePictureUrl'
        };
    </script>
    
    <script src="~/js/feed.js" asp-append-version="true"></script>
}

<!-- Hidden form with anti-forgery token for AJAX requests -->
<form method="post" style="display: none;" id="ajaxTokenForm">
    @Html.AntiForgeryToken()
</form>

<div class="container mt-4">
    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8 mx-auto">
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="h4 mb-1 text-accent">
                                <i class="fas fa-home me-2"></i>
                                Your Feed
                            </h2>
                            <p class="text-muted small mb-0">
                                <i class="fas fa-info-circle me-1"></i>
                                See posts from your friends and public profiles
                            </p>
                        </div>
                        <a href="/Account/Profile" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-user me-1"></i>
                            My Profile
                        </a>
                    </div>
                </div>
            </div>

            @if (!Model.Posts.Any())
            {
                <div class="card border-0 shadow-sm">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">No posts to show</h4>
                        <p class="text-muted">
                            Connect with friends to see their posts here, or check out public profiles!
                        </p>
                        <div class="mt-3">
                            <a href="/Account/Friends" class="btn btn-primary me-2">
                                <i class="fas fa-user-plus me-1"></i>
                                Find Friends
                            </a>
                            <a href="/Account/Profile" class="btn btn-outline-secondary">
                                <i class="fas fa-plus me-1"></i>
                                Create Post
                            </a>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <!-- Posts Feed -->
                <div class="posts-feed">
                    @foreach (var post in Model.Posts)
                    {
                        <div class="post-card card border-0 shadow-sm" data-post-id="@post.Id">
                            <!-- Post Header -->
                            <div class="post-header">
                                <div class="post-avatar">
                                    @if (!string.IsNullOrEmpty(post.User?.ProfilePictureUrl))
                                    {
                                        <img src="@post.User.ProfilePictureUrl" alt="Profile" class="rounded-circle" style="width: 36px; height: 36px; object-fit: cover;" />
                                    }
                                    else
                                    {
                                        <div class="rounded-circle bg-secondary d-flex align-items-center justify-content-center" style="width: 36px; height: 36px;">
                                            <i class="fas fa-user text-white"></i>
                                        </div>
                                    }
                                </div>
                                <div class="flex-grow-1">
                                    <div class="d-flex align-items-center">
                                        <a href="/Account/Profile/@post.User?.Id" class="text-decoration-none fw-bold me-2" style="color: var(--text-primary);">
                                            @post.User?.FirstName @post.User?.LastName
                                        </a>
                                        @if (post.UserId == Model.CurrentUser.Id)
                                        {
                                            <span class="badge bg-primary">You</span>
                                        }
                                        else if (!post.User?.IsProfilePublic == true)
                                        {
                                            <span class="badge bg-success">
                                                <i class="fas fa-user-friends"></i> Friend
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-info">
                                                <i class="fas fa-globe"></i> Public
                                            </span>
                                        }
                                    </div>
                                    <small class="text-muted">@post.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</small>
                                </div>
                            </div>

                            <!-- Post Image -->
                            @if (!string.IsNullOrEmpty(post.ImageUrl))
                            {
                                <div class="post-image">
                                    <img src="@post.ImageUrl" alt="Post image" class="w-100" style="max-height: 600px; object-fit: cover;" />
                                </div>
                            }

                            <!-- Post Caption -->
                            @if (!string.IsNullOrEmpty(post.Caption))
                            {
                                <div class="post-caption p-3">
                                    <p class="mb-0">@post.Caption</p>
                                </div>
                            }

                            <!-- Post Actions -->
                            <div class="post-actions border-top p-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center">
                                        <button class="btn btn-link btn-sm p-0 me-3 text-danger" onclick="toggleLikeFromFeed(@post.Id)">
                                            <i class="@(post.Likes.Any(l => l.UserId == Model.CurrentUser.Id) ? "fas" : "far") fa-heart"></i>
                                            <span class="ms-1">@post.Likes.Count</span>
                                        </button>
                                        <button class="btn btn-link btn-sm p-0 me-3 text-muted" onclick="openPostModal(@post.Id)">
                                            <i class="far fa-comment"></i>
                                            <span class="ms-1">@post.Comments.Count</span>
                                        </button>
                                    </div>
                                    <button class="btn btn-link btn-sm p-0 text-muted" onclick="openPostModal(@post.Id)">
                                        <i class="fas fa-expand-alt"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Load More Button -->
                <div class="text-center mt-4 mb-5">
                    <button class="btn btn-outline-primary" onclick="loadMorePosts()">
                        <i class="fas fa-chevron-down me-1"></i>
                        Load More Posts
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Post Modal (reuse from profile) -->
<div class="modal fade" id="postModal" tabindex="-1" aria-labelledby="postModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body p-0">
                <div class="row g-0">
                    <!-- Image Section -->
                    <div class="col-lg-8" id="postImageSection">
                        <img id="postImage" src="" alt="Post" class="w-100" style="max-height: 70vh; object-fit: cover;" />
                    </div>
                    
                    <!-- Content Section -->
                    <div class="col-lg-4" id="postContentSection" style="border-left: 1px solid #dee2e6;">
                        <!-- Post Header -->
                        <div class="p-3 border-bottom d-flex align-items-center">
                            <div class="me-3">
                                <img id="postUserAvatar" src="" alt="Profile" class="rounded-circle" style="width: 40px; height: 40px; object-fit: cover;" />
                            </div>
                            <div class="flex-grow-1">
                                <h6 class="mb-0" id="postUserName"></h6>
                                <small class="text-muted" id="postDate"></small>
                            </div>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        
                        <!-- Caption -->
                        <div class="p-3 border-bottom">
                            <p class="mb-0" id="postCaption"></p>
                        </div>
                        
                        <!-- Comments Section -->
                        <div class="comments-container" style="height: 300px; overflow-y: auto;">
                            <div id="commentsSection" class="p-3"></div>
                        </div>
                        
                        <!-- Like Section -->
                        <div class="p-3 border-top">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <button id="likeBtn" class="btn btn-link p-0 text-danger me-2" onclick="toggleLike()">
                                        <i class="far fa-heart fa-lg"></i>
                                    </button>
                                    <span id="likeCount">0 likes</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
