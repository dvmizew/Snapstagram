@page
@model Snapstagram.Pages.Account.NotificationsModel
@using Snapstagram.Models
@{
    ViewData["Title"] = "Notifications";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/account.css" asp-append-version="true" />
}

<div class="container mt-4">
    <div class="row">
        <div class="col-lg-10 mx-auto">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-accent text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">
                            <i class="fas fa-bell me-2"></i>
                            My Notifications
                        </h4>
                        @if (Model.Notifications.Count > 0)
                        {
                            <div class="d-flex gap-2">
                                <form method="post" asp-page-handler="MarkAllAsRead">
                                    <button type="submit" class="btn btn-light btn-sm">
                                        <i class="fas fa-check-double me-1"></i>
                                        Mark All as Read
                                    </button>
                                </form>
                                <form method="post" asp-page-handler="DeleteAllNotifications">
                                    <button type="submit" class="btn btn-outline-danger btn-sm">
                                        <i class="fas fa-trash me-1"></i>
                                        Delete All
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
                
                <div class="card-body p-0">
                    @if (Model.Notifications.Count == 0)
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-bell-slash fa-4x text-muted mb-3"></i>
                            <h5 class="text-muted fw-bold">No notifications yet</h5>
                            <p class="text-muted mb-0">When you get notifications, they'll show up here.</p>
                        </div>
                    }
                    else
                    {
                        <div class="notification-list">
                            @foreach (var notification in Model.Notifications)
                            {
                                var badgeClass = notification.Type switch
                                {
                                    NotificationType.ContentRemoved => "bg-danger",
                                    NotificationType.Warning => "bg-warning", 
                                    NotificationType.Information => "bg-info",
                                    NotificationType.FriendRequest => "bg-primary",
                                    NotificationType.FriendRequestAccepted => "bg-success",
                                    NotificationType.Like => "bg-danger",
                                    NotificationType.Comment => "bg-info",
                                    NotificationType.NewMessage => "bg-primary",
                                    _ => "bg-secondary"
                                };
                                
                                var iconClass = notification.Type switch
                                {
                                    NotificationType.ContentRemoved => "fas fa-exclamation-triangle",
                                    NotificationType.Warning => "fas fa-exclamation-circle",
                                    NotificationType.Information => "fas fa-info-circle",
                                    NotificationType.FriendRequest => "fas fa-user-plus",
                                    NotificationType.FriendRequestAccepted => "fas fa-user-check",
                                    NotificationType.Like => "fas fa-heart",
                                    NotificationType.Comment => "fas fa-comment",
                                    NotificationType.NewMessage => "fas fa-envelope",
                                    _ => "fas fa-bell"
                                };
                                
                                var itemClass = !notification.IsRead ? "notification-item unread" : "notification-item";
                                var notificationUrl = Model.GetNotificationUrl(notification);

                                <a href="@notificationUrl" class="@itemClass border-bottom text-decoration-none notification-link">
                                    <div class="d-flex align-items-start p-3">
                                        <div class="notification-icon me-3">
                                            <div class="rounded-circle d-flex align-items-center justify-content-center @badgeClass" style="width: 40px; height: 40px;">
                                                <i class="@iconClass text-white"></i>
                                            </div>
                                        </div>
                                        <div class="notification-content flex-grow-1">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <div>
                                                    @if (!string.IsNullOrEmpty(notification.SenderName))
                                                    {
                                                        <div class="notification-sender fw-bold text-accent">
                                                            @notification.SenderName
                                                        </div>
                                                    }
                                                    <div class="notification-message">
                                                        @notification.Message
                                                    </div>
                                                    <small class="text-muted">
                                                        <i class="fas fa-clock me-1"></i>
                                                        @notification.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")
                                                    </small>
                                                </div>
                                                <div class="d-flex align-items-center notification-actions">
                                                    @if (!notification.IsRead)
                                                    {
                                                        <form method="post" asp-page-handler="MarkAsRead" asp-route-notificationId="@notification.Id" class="me-1" onclick="event.stopPropagation();">
                                                            <button type="submit" class="btn btn-outline-primary btn-sm" title="Mark as read">
                                                                <i class="fas fa-check"></i>
                                                            </button>
                                                        </form>
                                                    }
                                                    <form method="post" asp-page-handler="DeleteNotification" asp-route-notificationId="@notification.Id" 
                                                          class="ms-1" onclick="event.stopPropagation();">
                                                        <button type="submit" class="btn btn-outline-danger btn-sm" title="Delete notification">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                                @if (!notification.IsRead)
                                                {
                                                    <div class="notification-indicator">
                                                        <span class="badge bg-primary rounded-pill">New</span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.notification-item {
    transition: all 0.3s ease;
    position: relative;
    display: block;
}

.notification-link {
    color: inherit;
}

.notification-link:hover {
    text-decoration: none !important;
    color: inherit;
}

.notification-item.unread {
    background-color: rgba(15, 173, 255, 0.05);
    border-left: 4px solid var(--accent-color);
}

.notification-icon {
    flex-shrink: 0;
}

.notification-actions {
    opacity: 0;
    transition: opacity 0.2s ease;
}

.notification-item:hover .notification-actions {
    opacity: 1;
}

.notification-actions .btn {
    border: none;
    padding: 0.25rem 0.5rem;
    margin: 0 0.1rem;
}

.notification-actions .btn:hover {
    transform: scale(1.1);
}

.notification-content {
    min-width: 0;
}

.notification-message {
    color: var(--text-primary);
    line-height: 1.4;
    margin-bottom: 0.25rem;
}

.notification-sender {
    font-size: 0.9rem;
    margin-bottom: 0.25rem;
}

.notification-indicator {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
}

.notification-list .notification-item:last-child {
    border-bottom: none !important;
}

/* Animation for new notifications */
@@keyframes notificationSlideIn {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.notification-item.unread {
    animation: notificationSlideIn 0.4s ease-out;
}

/* Responsive adjustments */
@@media (max-width: 768px) {
    .notification-icon {
        margin-right: 0.75rem !important;
    }
    
    .notification-icon > div {
        width: 32px !important;
        height: 32px !important;
    }
    
    .notification-sender {
        font-size: 0.85rem;
    }
    
    .notification-message {
        font-size: 0.9rem;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Prevent navigation when clicking the "Mark as Read" or "Delete" buttons
    const actionForms = document.querySelectorAll('form[asp-page-handler="MarkAsRead"], form[asp-page-handler="DeleteNotification"]');
    actionForms.forEach(form => {
        form.addEventListener('click', function(e) {
            e.stopPropagation();
        });
        form.addEventListener('submit', function(e) {
            e.stopPropagation();
        });
    });
});
</script>
</div>