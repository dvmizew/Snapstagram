<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Snapstagram</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Snapstagram.styles.css" asp-append-version="true" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <!-- Main Navigation -->
    <nav class="main-nav">
        <div class="nav-container">
            <div class="nav-left">
                <a class="brand-logo" asp-area="" asp-page="/Index">
                    <i class="fas fa-camera text-gradient me-2"></i>
                    <span class="brand-text">Snapstagram</span>
                </a>
            </div>
            
            <div class="nav-center">
                @if (User.Identity?.IsAuthenticated == true)
                {
                    <div class="search-container">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" class="search-input" placeholder="Search users, posts, and more..." />
                    </div>
                }
            </div>
            
            <div class="nav-right">
                @if (User.Identity?.IsAuthenticated == true)
                {
                    <div class="nav-icons">
                        <a href="/Feed" class="nav-icon" title="Home">
                            <i class="fas fa-home"></i>
                        </a>
                        <a href="/Messages" class="nav-icon" title="Messages">
                            <i class="fas fa-paper-plane"></i>
                            <span class="notification-badge" id="messageNotifications" style="display: none;">0</span>
                        </a>
                        <a href="/Create" class="nav-icon" title="Create">
                            <i class="fas fa-plus-square"></i>
                        </a>
                        <a href="/Explore" class="nav-icon" title="Explore">
                            <i class="fas fa-compass"></i>
                        </a>
                        <a href="/Settings" class="nav-icon" title="Settings">
                            <i class="fas fa-cog"></i>
                        </a>
                        @await Html.PartialAsync("_NotificationDropdown")
                        <!-- Fallback notification button -->
                        <a href="/Notifications" class="nav-icon" title="All Notifications" id="fallbackNotificationBtn" style="display: none;">
                            <i class="fas fa-bell"></i>
                            <span class="notification-badge" id="fallbackNotificationBadge" style="display: none;">0</span>
                        </a>
                        <div class="profile-dropdown">
                            <div class="nav-icon profile-icon">
                                <i class="fas fa-user-circle"></i>
                            </div>
                            <div class="dropdown-menu">
                                <a href="/Profile" class="dropdown-item">
                                    <i class="fas fa-user me-2"></i>My Profile
                                </a>
                                <a href="/Settings" class="dropdown-item">
                                    <i class="fas fa-cog me-2"></i>Settings
                                </a>
                                <hr class="dropdown-divider">
                                <form method="post" asp-page="/Account/Logout" class="d-inline">
                                    <button type="submit" class="dropdown-item text-danger">
                                        <i class="fas fa-sign-out-alt me-2"></i>Logout
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="auth-buttons">
                        <a class="btn btn-outline-primary me-2" asp-page="/Account/Login">Login</a>
                        <a class="btn btn-primary" asp-page="/Account/Register">Sign Up</a>
                    </div>
                }
            </div>
        </div>
    </nav>

    <main role="main">
        @RenderBody()
    </main>

    <!-- Modal Component -->
    @await Html.PartialAsync("_Modal")

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    
    <!-- Notification System Initialization -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Check if notification dropdown failed to load
        const notificationDropdown = document.getElementById('notificationDropdown');
        const fallbackBtn = document.getElementById('fallbackNotificationBtn');
        
        if (!notificationDropdown) {
            // Show fallback button if dropdown doesn't exist
            if (fallbackBtn) {
                fallbackBtn.style.display = 'flex';
            }
        }
        
        // Initialize notification count checking
        if (typeof loadNotificationCount !== 'function') {
            // Define fallback notification count function
            window.loadNotificationCount = async function() {
                try {
                    const response = await fetch('/api/notifications/unread-count');
                    const data = await response.json();
                    
                    if (data.success) {
                        updateNotificationBadge(data.data);
                    }
                } catch (error) {
                    console.error('Error loading notification count:', error);
                }
            };
            
            window.updateNotificationBadge = function(count) {
                const badges = document.querySelectorAll('.notification-badge');
                badges.forEach(badge => {
                    if (count > 0) {
                        badge.textContent = count > 99 ? '99+' : count.toString();
                        badge.style.display = 'block';
                    } else {
                        badge.style.display = 'none';
                    }
                });
            };
            
            // Load initial count
            loadNotificationCount();
            
            // Refresh count every 30 seconds
            setInterval(loadNotificationCount, 30000);
        }
    });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>