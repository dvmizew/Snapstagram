@page
@model Snapstagram.Pages.AlbumsModel
@{
    ViewData["Title"] = "Photo Albums";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Photo Albums</h1>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createAlbumModal">
            <i class="bi bi-plus-circle"></i> Create Album
        </button>
    </div>

    @if (!Model.Albums.Any())
    {
        <div class="text-center my-5">
            <h3>You don't have any albums yet</h3>
            <p class="text-muted">Create your first album to start organizing your photos</p>
            <button class="btn btn-outline-primary mt-2" data-bs-toggle="modal" data-bs-target="#createAlbumModal">
                <i class="bi bi-plus-circle"></i> Create Your First Album
            </button>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var album in Model.Albums)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="card-img-top album-cover">
                            @if (!string.IsNullOrEmpty(album.CoverPhotoUrl))
                            {
                                <img src="@album.CoverPhotoUrl" alt="@album.Title" class="img-fluid">
                            }
                            else
                            {
                                <div class="no-image">
                                    <i class="bi bi-images"></i>
                                </div>
                            }
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@album.Title</h5>
                            @if (!string.IsNullOrEmpty(album.Description))
                            {
                                <p class="card-text">@album.Description</p>
                            }
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">Created @album.CreatedAt.ToString("MMM dd, yyyy")</small>
                                @if (album.IsPrivate)
                                {
                                    <span class="badge bg-secondary"><i class="bi bi-lock-fill"></i> Private</span>
                                }
                                else
                                {
                                    <span class="badge bg-success"><i class="bi bi-globe"></i> Public</span>
                                }
                            </div>
                        </div>
                        <div class="card-footer bg-white">
                            <a href="/Albums/@album.Id" class="btn btn-sm btn-outline-primary">
                                <i class="bi bi-images"></i> View Photos
                            </a>
                            <button class="btn btn-sm btn-outline-secondary ms-1" 
                                    onclick="editAlbum(@album.Id, '@album.Title', '@album.Description', @album.IsPrivate.ToString().ToLower())">
                                <i class="bi bi-pencil"></i> Edit
                            </button>
                            <button class="btn btn-sm btn-outline-danger ms-1 float-end" onclick="confirmDeleteAlbum(@album.Id, '@album.Title')">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Create Album Modal -->
<div class="modal fade" id="createAlbumModal" tabindex="-1" aria-labelledby="createAlbumModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createAlbumModalLabel">Create New Album</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="createAlbumForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="albumTitle" class="form-label">Album Title</label>
                        <input type="text" class="form-control" id="albumTitle" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="albumDescription" class="form-label">Description (Optional)</label>
                        <textarea class="form-control" id="albumDescription" name="description" rows="3"></textarea>
                    </div>
                    <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="albumIsPrivate" name="isPrivate">
                        <label class="form-check-label" for="albumIsPrivate">Private Album</label>
                        <div class="form-text">Private albums are only visible to you</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Album</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Album Modal -->
<div class="modal fade" id="editAlbumModal" tabindex="-1" aria-labelledby="editAlbumModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAlbumModalLabel">Edit Album</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editAlbumForm">
                <input type="hidden" id="editAlbumId" name="id">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="editAlbumTitle" class="form-label">Album Title</label>
                        <input type="text" class="form-control" id="editAlbumTitle" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="editAlbumDescription" class="form-label">Description (Optional)</label>
                        <textarea class="form-control" id="editAlbumDescription" name="description" rows="3"></textarea>
                    </div>
                    <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="editAlbumIsPrivate" name="isPrivate">
                        <label class="form-check-label" for="editAlbumIsPrivate">Private Album</label>
                        <div class="form-text">Private albums are only visible to you</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Album Confirmation Modal -->
<div class="modal fade" id="deleteAlbumModal" tabindex="-1" aria-labelledby="deleteAlbumModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteAlbumModalLabel">Delete Album</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the album "<span id="deleteAlbumTitle"></span>"?</p>
                <p class="text-danger"><strong>Warning:</strong> This will permanently delete all photos in this album. This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete Album</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .album-cover {
            height: 200px;
            overflow: hidden;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .album-cover img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .no-image {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
        }
        
        .no-image i {
            font-size: 3rem;
            color: #dee2e6;
        }
    </style>
}

@section Scripts {
    <script>
        // Create Album
        document.getElementById('createAlbumForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = {
                title: document.getElementById('albumTitle').value,
                description: document.getElementById('albumDescription').value,
                isPrivate: document.getElementById('albumIsPrivate').checked
            };
            
            try {
                const response = await fetch('/api/Albums', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Failed to create album. Please try again.');
                }
            } catch (error) {
                console.error('Error creating album:', error);
                alert('An error occurred while creating the album.');
            }
        });
        
        // Edit Album
        function editAlbum(id, title, description, isPrivate) {
            document.getElementById('editAlbumId').value = id;
            document.getElementById('editAlbumTitle').value = title;
            document.getElementById('editAlbumDescription').value = description || '';
            document.getElementById('editAlbumIsPrivate').checked = isPrivate;
            
            new bootstrap.Modal(document.getElementById('editAlbumModal')).show();
        }
        
        document.getElementById('editAlbumForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const id = document.getElementById('editAlbumId').value;
            const formData = {
                id: parseInt(id),
                title: document.getElementById('editAlbumTitle').value,
                description: document.getElementById('editAlbumDescription').value,
                isPrivate: document.getElementById('editAlbumIsPrivate').checked
            };
            
            try {
                const response = await fetch(`/api/Albums/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Failed to update album. Please try again.');
                }
            } catch (error) {
                console.error('Error updating album:', error);
                alert('An error occurred while updating the album.');
            }
        });
        
        // Delete Album
        function confirmDeleteAlbum(id, title) {
            document.getElementById('deleteAlbumTitle').textContent = title;
            
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteAlbumModal'));
            deleteModal.show();
            
            document.getElementById('confirmDeleteBtn').onclick = async function() {
                try {
                    const response = await fetch(`/api/Albums/${id}`, {
                        method: 'DELETE'
                    });
                    
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Failed to delete album. Please try again.');
                    }
                } catch (error) {
                    console.error('Error deleting album:', error);
                    alert('An error occurred while deleting the album.');
                }
                
                deleteModal.hide();
            };
        }
    </script>
}
