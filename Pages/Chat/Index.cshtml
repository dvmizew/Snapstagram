@page
@model Snapstagram.Pages.Chat.IndexModel
@{
    ViewData["Title"] = "Messages";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">
                            <i class="fas fa-comments me-2"></i>Messages
                        </h5>
                        <div class="btn-group">
                            <button type="button" class="btn btn-light btn-sm" data-bs-toggle="modal" data-bs-target="#newChatModal">
                                <i class="fas fa-plus me-1"></i>New Chat
                            </button>
                            <button type="button" class="btn btn-light btn-sm" data-bs-toggle="modal" data-bs-target="#createGroupModal">
                                <i class="fas fa-users me-1"></i>New Group
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    @if (Model.RecentConversations.Any() || Model.UserGroups.Any())
                    {
                        <div class="list-group list-group-flush">
                            <!-- Individual Conversations -->
                            @foreach (var conversation in Model.RecentConversations)
                            {
                                <a href="/Chat/Conversation?userId=@conversation.OtherUser?.Id" class="list-group-item list-group-item-action">
                                    <div class="d-flex align-items-center">
                                        <img src="@(conversation.OtherUser?.ProfilePictureUrl ?? "/images/default-avatar.png")" 
                                             alt="@conversation.OtherUser?.UserName" 
                                             class="rounded-circle me-3" 
                                             style="width: 50px; height: 50px; object-fit: cover;">
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between">
                                                <h6 class="mb-1">@conversation.OtherUser?.FirstName @conversation.OtherUser?.LastName</h6>
                                                <small class="text-muted">@conversation.LastMessageAt?.ToString("HH:mm")</small>
                                            </div>
                                            <p class="mb-1 text-muted">@conversation.LastMessage</p>
                                            @if (conversation.UnreadCount > 0)
                                            {
                                                <span class="badge bg-primary rounded-pill">@conversation.UnreadCount</span>
                                            }
                                        </div>
                                    </div>
                                </a>
                            }
                            
                            <!-- Group Conversations -->
                            @foreach (var group in Model.UserGroups)
                            {
                                <a href="/Chat/Group/@group.Id" class="list-group-item list-group-item-action">
                                    <div class="d-flex align-items-center">
                                        <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center me-3" 
                                             style="width: 50px; height: 50px;">
                                            <i class="fas fa-users text-white"></i>
                                        </div>
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between">
                                                <h6 class="mb-1">@group.Name</h6>
                                                <small class="text-muted">@group.LastMessageAt?.ToString("HH:mm")</small>
                                            </div>
                                            <p class="mb-1 text-muted">@group.LastMessage</p>
                                            @if (group.UnreadCount > 0)
                                            {
                                                <span class="badge bg-primary rounded-pill">@group.UnreadCount</span>
                                            }
                                        </div>
                                    </div>
                                </a>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No conversations yet</h5>
                            <p class="text-muted">Start a new conversation with your friends!</p>
                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newChatModal">
                                <i class="fas fa-plus me-2"></i>Start Your First Chat
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- New Chat Modal -->
<div class="modal fade" id="newChatModal" tabindex="-1" aria-labelledby="newChatModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newChatModalLabel">Start New Chat</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newChatForm">
                    <div class="mb-3">
                        <label for="friendSelect" class="form-label">Select a friend to chat with:</label>
                        <select class="form-select" id="friendSelect" required>
                            <option value="">Choose a friend...</option>
                            @foreach (var friend in Model.Friends)
                            {
                                <option value="@friend.Id">@friend.FirstName @friend.LastName</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="startNewChat()">Start Chat</button>
            </div>
        </div>
    </div>
</div>

<!-- Create Group Modal -->
<div class="modal fade" id="createGroupModal" tabindex="-1" aria-labelledby="createGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createGroupModalLabel">Create Group Chat</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createGroupForm">
                    <div class="mb-3">
                        <label for="groupName" class="form-label">Group Name</label>
                        <input type="text" class="form-control" id="groupName" required>
                    </div>
                    <div class="mb-3">
                        <label for="groupDescription" class="form-label">Description (Optional)</label>
                        <textarea class="form-control" id="groupDescription" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Select Friends to Add:</label>
                        <div class="form-check-list" style="max-height: 200px; overflow-y: auto;">
                            @foreach (var friend in Model.Friends)
                            {
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="@friend.Id" id="friend_@friend.Id">
                                    <label class="form-check-label" for="friend_@friend.Id">
                                        @friend.FirstName @friend.LastName
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="createGroup()">Create Group</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function startNewChat() {
            const friendId = document.getElementById('friendSelect').value;
            if (friendId) {
                window.location.href = `/Chat/StartConversation?userId=${friendId}`;
            }
        }

        function createGroup() {
            const groupName = document.getElementById('groupName').value;
            const groupDescription = document.getElementById('groupDescription').value;
            const selectedFriends = Array.from(document.querySelectorAll('.form-check-input:checked')).map(cb => cb.value);
            
            if (groupName && selectedFriends.length > 0) {
                const formData = new FormData();
                formData.append('Name', groupName);
                formData.append('Description', groupDescription);
                selectedFriends.forEach(friendId => formData.append('MemberIds', friendId));
                
                fetch('/Chat/CreateGroup', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = `/Chat/Group/${data.groupId}`;
                    } else {
                        alert('Error creating group: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while creating the group.');
                });
            }
        }
    </script>
}
